React Native Tutorial
---------------------

Link:
https://www.youtube.com/watch?v=LWs6dY92_MU&list=PL8kfZyp--gEXs4YsSLtB3KqDtdOFHMjWZ&index=3

Tutorial 1: Introduction
----------
React native is build on top on javascript.
It is used to build android, ios and web apps
React native will convert UI code to web, android or ios
Mostly the UI related will be written in UI native component and logic will be written in javascript


Tutorial 2: Setup and Creating first app with expo
---------------

Go to https://reactnative.dev/
Click getting started
Click on environment setup -> Setting up the development environment
It gives two option to install 1. Expo cli 2. React native cli

Expo cli vs react native cli

Expo cli:
1. Its is free third party's one
2. Easy to setup and run
3. Native feature wont be available.
4. Mostly for starting android and ios
5. Less control. We wont have more control on it

React native cli:
1. Its native cli
2. Complex to setup and run
3. Its a native feature
4. Can write own code to start for android and ios
5. Has more control. We have all the control of this


Go to https://expo.dev/
We can check the sample code and its look in main page.
we can select web or android or ios or my device to show the preview
To run in our own device, we need to install expo from play store or app store.
Scan the QR code which is shown in expo portal


Installation:
Install recent node js from https://nodejs.org/en/download/
Give below command to check whether node js is installed or not
node -v
npm -v

We can use any IDE. Mostly the visual studio code would be better.

To install expo, use any one of the below command:
npm install -g expo-cli
or
yarn global add expo-cli


To create first project using expo use below command:
expo init projectname
Eg:
expo init myfirstapp

//we can select blank if we want to create with blank project. 
Project will be created.
Project will be created by default with yarn.
yarn start - will used to open the expo page. There we can choose what is required
yarn android - It will run on android
yarn ios - It will run on ios
yarn web - It will run on web


Use below command to go inside the created project:
cd projectname
Eg:
cd myfirstapp

Use below command to run the project:
yarn start

//This will show the QR code and also opens the expo in browser.
There also we can see the QR code. We can select the QR code in expo app to run on the device.
The web portal also shows, which portal we wanted to run. android or ios or web etc. we can select that


To change content:
Go to App.js file
Change the content and see whether it is reflecting or not



Tutorial 3: Create native app with react cli and ejecting expo project
-----------------------
react naticel cli project will have more feature and control when compare to expo project

Go to https://reactnative.dev/
Click Get started
Click environment setup
Select React native quick start
Select development os (PC OS)
Select Target os (mobile os)       //ios will be supported only in mac os


Follow the instruction given in documentation
Install node js, java and setup the environment variable for java
Node version should be 10 or higher
jdk version should be 8 or higher


Install android studio and setup the environment variable for android sdk
Install latest version of android studio. 
Open android studio, go to sdk manager
Select show package details   //Here we can see the android version
Go to sdk tool tab, we can see the installed sdk tool version. Make sure package and sdk tool version are installed for same version
Add ANDROID_HOME environment variable for sdk path
Add ANDROID_PTOOLS enviroment variable for platform tools path

//if we previously installed react-native-cli package, then we need to remove that as it might cause some unexpected issue


Go to folder where we wanted to create new project
Use below command to create new project
npx react-native init Projectname
npx react-native init MyFirstProject
//This will create the project with default dependencies
Go inside the project using cd command
cd MyFirstProject

We can use physical device or emulator device


Make sure virtualization is enabled in system.

Open android studio, Open AVD manager
Here we can see list of emulator, if not there we can create new one by giving required details.
After adding the emulator, we can launch the emulator
Wait for emulator to fully up
If we face any problem in AVD manager, then go to SDK manager and check whether emulator accelator is installed or not


Use below command to build the project
npx react-native start


Open one more terminal and 
Use below command to install and run the apk 
npx react-native run-android
//This will run the app in emulator/device
//we can see the app will lauching a
//now we can edit the content to check whether edited content is reflecting or not

Thats it



Converting expo project to react native project:

Go to the root of the project.
Eg:
cd MyFirstProject

Run below command to eject from expo and show react native project
Eg:
npm run eject  
//it will asks few details, give required details
//if we eject in mac system, we will have android and ios package. 
// if we eject in windows or linux system, then we will have only android package

Give below command to run in device/emulator
npx react-native run-android
//This will run the app in device/emulator

Thats it




Tutorial 4: VS code for react native
------------------------------------
This video is related to usefull plugins for react native projects in visual studio code and basics of visual studio code IDE
we can type vs code download in google and select the official link to download vs code
We can use ctrl/command + = to zoom in and ctrl/command + - to zoomout
We can change the IDE theme/color in File -> Preferencess -> color theme 
We can click on extension to install any exta plugins


Below are the plugins
material icon theme - this will give different icon for each file type extension etc
react native snippets - this will used for react native applications. helps in auto completion and more
react native tools - This will help to run or debug react native application in vs code
color highlights - This will help to show colors. even in ccs if we use color related code, it will highligt the same color
Bracket pair colorizer - this will helps to show color for brace, where the brace of the class/method started and end
npm intelligence - this will help regarding npm. Eg: auto completion of node/npm related code etc
git lens - this will help to manage the project git repo in vs code
alt + shift + F - this will help to format the alignment of code
File->auto save - this will help to save the code automatically
view->show minimap - this will show all code in mini dialog. used for scrolling the code if there are more lines
We can click on left explorer icon for more space for coding
Terminal -> new terminal - to show the new terminal. for switching different terminal we can select in below
We can click on search icon in left - to search or replace the text - using ctrl + shift + F
clicking on one file, will show the content in tab
double clicking the file will open another tab
view->appearance -> full screen/zen mode - this is for giving more space for coding




Tutorial 5: structure and basics of react native project
--------------------
Create a fresh react native project using command


Below are the files/folders and its purpose:
__tests__ - this folder will contains all unit test class. by default, it will have only one, we can add that later
android - this folder has files and folder related to android app. if we created the project with expo, instead of android/ios, it will have expo folder
ios - this folder has files and folder related to ios app.  if we created the project with expo, instead of android/ios, it will have expo folder
node_modules - this folder has all packages related to node and react native
App.js - this is the main file. this has base of the project. This is important file. This is responsible for showing something on the screen
app.json - this file has name and display name of the app. This will contain the configuration of the app
index.js - this is the start file of the project. this will call App.js and app.json etc
package.json - this will have the dependencies and scripts for starting and others etc. When installing node modele, name and version will be saved here



to add commands we can use like below
/* my commands */


For every change the app will refresh automatically.
we can press r key for manually refresh
we can press d key for opening developer options


Lets press the d key to open developer options
Below are options in developers options
Reload - this is to reload the app
Debug - this is to debug the project
Change bundle location - it is to change bundle location. no need to use as of now
Toggle inspector - this is used to inspect each element in screen
Disable fast refresh - here we can enable or disable auto refresh if any changes in code
Enable sampling profiler - not need to use as of now
Show perf monitor - This will show few perf monitoring of the app in device 
Settings - This is for debugging and performance
If we are using real device, we can open the developer menu by shaking the device



Below are few details about the code in App.js

we can see, it will import "react" and component of "react-native"
and there are other component which will be imported from other module

Modify below line:
const App: () => React$Node = () => {    //old
to:
const App = () => {      //modified       //Here App is like html

const styles = StyleSheet.create({   //This is like css

export default App;   //Finally App will be exported


Below are few tags and its purpose:
<StatusBar>  - It controls the status bar of the device (Top most bar of the device)
<SafeAreaView> - It is like body of the page
<ScrollView>  - It is for creating the scrollable content/page
<View> - It is simular to div. 
<Text> - This is for adding the text

<Button> - this is for adding button. We need to give title and onPress
Eg:
<Button title="My Youtube channel" onPress={ () => {Linking.openURL('http://youtube.com/fdhkah-dfk')} }></Button>
//Here the button will be disabled as "My Youtube channel". When pressingthe button, it will open the youtube in browser or youtube app


Other options:
onPress - This specifies, When pressing that element what should do


Sometime the content wont be directly available in same file, it might in other file, it will be imported and added here
Eg: LearnMoreLinks

//In few tags we can see, it will calls the styles sheet Eg: <View style={styles.myview}> 

We can modify the content as per our need












Notes:
------
------

expo build:android     //This is to create apk and save to expo site

adb install file.apk    //This is to install apk in connected device using adb command


npm run eject  //This will create folder seperately for android/ios 


react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
//This command is to build the bundle

cd android


./gradlew assembleDebug



react-native run-android      //This command will be used to run the app
or
npm run android //we can use this command also. Because in script, it will still call react-native run-android command








